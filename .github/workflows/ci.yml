name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: concertconnect_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Setup test environment
      working-directory: ./backend
      run: |
        cp .env.example .env
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/concertconnect_test" >> .env
        echo "REDIS_URL=redis://localhost:6379" >> .env
        echo "JWT_SECRET=test-jwt-secret" >> .env
        echo "NODE_ENV=test" >> .env
    
    - name: Generate Prisma client
      working-directory: ./backend
      run: npx prisma generate
    
    - name: Run database migrations
      working-directory: ./backend
      run: npx prisma migrate deploy
    
    - name: Run tests
      working-directory: ./backend
      run: npm test
    
    - name: Run linter
      working-directory: ./backend
      run: npm run lint
    
    - name: Build backend
      working-directory: ./backend
      run: npm run build

  web-test:
    name: Web App Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install web dependencies
      working-directory: ./web
      run: npm ci
    
    - name: Setup test environment
      working-directory: ./web
      run: |
        cp ../.env.example .env.local
        echo "NEXT_PUBLIC_API_URL=http://localhost:3001" >> .env.local
        echo "NEXTAUTH_SECRET=test-nextauth-secret" >> .env.local
        echo "NEXTAUTH_URL=http://localhost:3000" >> .env.local
    
    - name: Run linter
      working-directory: ./web
      run: npm run lint
    
    - name: Run tests
      working-directory: ./web
      run: npm test
    
    - name: Build web app
      working-directory: ./web
      run: npm run build

  mobile-test:
    name: Mobile App Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: mobile/package-lock.json
    
    - name: Install mobile dependencies
      working-directory: ./mobile
      run: npm ci
    
    - name: Run linter
      working-directory: ./mobile
      run: npm run lint
    
    - name: Run tests
      working-directory: ./mobile
      run: npm test

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend-test, web-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: false
        tags: concert-connect/backend:test
    
    - name: Build web image
      uses: docker/build-push-action@v5
      with:
        context: ./web
        push: false
        tags: concert-connect/web:test
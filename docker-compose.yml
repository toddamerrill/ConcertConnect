version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: concert-connect-db
    environment:
      POSTGRES_DB: concertconnect
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: concert-connect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: concert-connect-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/concertconnect
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-key
      - TICKETMASTER_API_KEY=your-ticketmaster-api-key
      - STRIPE_SECRET_KEY=your-stripe-secret-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: concert-connect-web
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-nextauth-secret
    depends_on:
      - backend
    volumes:
      - ./web:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data: